import { makeRequest2, navigateToTelefono, socket } from "../app.js";

export default function renderScreenQuestion1T(selectedArtistData) {
  const app = document.getElementById("app");

  let hasAnswered = false;
  let timeout;

  async function getQuestion() {
    try {
      if (!selectedArtistData || !selectedArtistData.selectedArtist || !selectedArtistData.selectedArtist.name) {
        app.innerHTML = "<p>Error: No se ha seleccionado un artista válido.</p>";
        return;
      }

      const artistName = selectedArtistData.selectedArtist.name;

      const response = await makeRequest2("/questions", "GET");

      if (!response || !Array.isArray(response)) {
        app.innerHTML = "<p>Error al obtener preguntas del servidor.</p>";
        return;
      }

      const artistData = response.find(
        (artist) => artist.artist.toLowerCase() === artistName.toLowerCase()
      );

      if (!artistData || !artistData.questions || artistData.questions.length === 0) {
        app.innerHTML = "<p>No hay preguntas disponibles para el artista seleccionado.</p>";
        return;
      }

      const question = artistData.questions[0];

      app.innerHTML = `
          <div id="screenQuestion1T">
            <svg width="193" height="50" viewBox="0 0 193 50" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M24.4999 0C10.9692 0 0 11.1751 0 24.96C0 38.7454 10.9692 49.9196 24.4999 49.9196C38.0319 49.9196 49 38.7454 49 24.96C49 11.176 38.0322 0 24.4999 0ZM35.7353 35.9994C35.2965 36.7327 34.3544 36.9652 33.6347 36.5151C27.8824 32.9354 20.641 32.1247 12.1129 34.1098C11.2911 34.3005 10.4719 33.7759 10.2847 32.9384C10.0965 32.1008 10.6094 31.2663 11.4332 31.0755C20.7659 28.9033 28.7712 29.8386 35.2292 33.8594C35.9489 34.3095 36.1771 35.2662 35.7353 35.9994ZM38.7341 29.2031C38.1811 30.1188 37.005 30.4079 36.1069 29.8445C29.5214 25.7206 19.4827 24.5263 11.6933 26.9352C10.6831 27.2461 9.61616 26.6661 9.30955 25.6386C9.00529 24.6095 9.57491 23.5245 10.5834 23.2116C19.481 20.4611 30.5424 21.7934 38.1051 26.5281C39.0032 27.0914 39.287 28.2893 38.7341 29.2031ZM38.9915 22.126C31.0953 17.3479 18.0676 16.9085 10.5287 19.2396C9.31804 19.6137 8.03779 18.9174 7.67092 17.6841C7.30405 16.4501 7.98689 15.1467 9.19838 14.7718C17.8526 12.0952 32.2392 12.6123 41.3302 18.1106C42.4215 18.769 42.7784 20.2018 42.1319 21.3097C41.4882 22.419 40.0769 22.7847 38.9915 22.126Z" fill="white"/>
              <path d="M69.9339 38.168C67.9019 38.168 66.2219 37.696 64.8939 36.752C63.5819 35.792 62.8699 34.392 62.7579 32.552H68.4219C68.5019 33.528 68.9339 34.016 69.7179 34.016C70.0059 34.016 70.2459 33.952 70.4379 33.824C70.6459 33.68 70.7499 33.464 70.7499 33.176C70.7499 32.776 70.5339 32.456 70.1019 32.216C69.6699 31.96 68.9979 31.672 68.0859 31.352C66.9979 30.968 66.0939 30.592 65.3739 30.224C64.6699 29.856 64.0619 29.32 63.5499 28.616C63.0379 27.912 62.7899 27.008 62.8059 25.904C62.8059 24.8 63.0859 23.864 63.6459 23.096C64.2219 22.312 64.9979 21.72 65.9739 21.32C66.9659 20.92 68.0779 20.72 69.3099 20.72C71.3899 20.72 73.0379 21.2 74.2539 22.16C75.4859 23.12 76.1339 24.472 76.1979 26.216H70.4619C70.4459 25.736 70.3259 25.392 70.1019 25.184C69.8779 24.976 69.6059 24.872 69.2859 24.872C69.0619 24.872 68.8779 24.952 68.7339 25.112C68.5899 25.256 68.5179 25.464 68.5179 25.736C68.5179 26.12 68.7259 26.44 69.1419 26.696C69.5739 26.936 70.2539 27.232 71.1819 27.584C72.2539 27.984 73.1339 28.368 73.8219 28.736C74.5259 29.104 75.1339 29.616 75.6459 30.272C76.1579 30.928 76.4139 31.752 76.4139 32.744C76.4139 33.784 76.1579 34.72 75.6459 35.552C75.1339 36.368 74.3899 37.008 73.4139 37.472C72.4379 37.936 71.2779 38.168 69.9339 38.168ZM84.7179 38.168C83.3579 38.168 82.1339 37.888 81.0459 37.328C79.9579 36.768 79.1019 35.968 78.4779 34.928C77.8699 33.872 77.5659 32.64 77.5659 31.232C77.5659 29.824 77.8699 28.6 78.4779 27.56C79.1019 26.504 79.9579 25.696 81.0459 25.136C82.1339 24.576 83.3579 24.296 84.7179 24.296C86.0779 24.296 87.3019 24.576 88.3899 25.136C89.4779 25.696 90.3259 26.504 90.9339 27.56C91.5579 28.6 91.8699 29.824 91.8699 31.232C91.8699 32.64 91.5579 33.872 90.9339 34.928C90.3259 35.968 89.4779 36.768 88.3899 37.328C87.3019 37.888 86.0779 38.168 84.7179 38.168ZM84.7179 33.56C85.2139 33.56 85.6299 33.368 85.9659 32.984C86.3019 32.584 86.4699 32 86.4699 31.232C86.4699 30.464 86.3019 29.888 85.9659 29.504C85.6299 29.104 85.2139 28.904 84.7179 28.904C84.2219 28.904 83.8059 29.104 83.4699 29.504C83.1339 29.888 82.9659 30.464 82.9659 31.232C82.9659 32 83.1259 32.584 83.4459 32.984C83.7819 33.368 84.2059 33.56 84.7179 33.56ZM103.024 24.368C104.576 24.368 105.784 24.888 106.648 25.928C107.528 26.968 107.968 28.376 107.968 30.152V38H102.664V30.824C102.664 30.184 102.488 29.68 102.136 29.312C101.8 28.928 101.344 28.736 100.768 28.736C100.176 28.736 99.7118 28.928 99.3758 29.312C99.0398 29.68 98.8718 30.184 98.8718 30.824V38H93.5438V24.464H98.8718V26.528C99.2878 25.888 99.8398 25.368 100.528 24.968C101.232 24.568 102.064 24.368 103.024 24.368ZM112.966 23.384C112.038 23.384 111.294 23.136 110.734 22.64C110.174 22.144 109.894 21.52 109.894 20.768C109.894 20 110.174 19.368 110.734 18.872C111.294 18.36 112.038 18.104 112.966 18.104C113.878 18.104 114.614 18.36 115.174 18.872C115.734 19.368 116.014 20 116.014 20.768C116.014 21.52 115.734 22.144 115.174 22.64C114.614 23.136 113.878 23.384 112.966 23.384ZM115.606 24.464V38H110.278V24.464H115.606ZM117.293 31.232C117.293 29.824 117.581 28.6 118.157 27.56C118.749 26.504 119.565 25.696 120.605 25.136C121.661 24.576 122.861 24.296 124.205 24.296C125.965 24.296 127.445 24.792 128.645 25.784C129.861 26.776 130.629 28.152 130.949 29.912H125.309C125.101 29.208 124.693 28.856 124.085 28.856C123.653 28.856 123.309 29.056 123.053 29.456C122.813 29.856 122.693 30.448 122.693 31.232C122.693 32.016 122.813 32.608 123.053 33.008C123.309 33.408 123.653 33.608 124.085 33.608C124.693 33.608 125.101 33.256 125.309 32.552H130.949C130.629 34.312 129.861 35.688 128.645 36.68C127.445 37.672 125.965 38.168 124.205 38.168C122.861 38.168 121.661 37.888 120.605 37.328C119.565 36.768 118.749 35.968 118.157 34.928C117.581 33.872 117.293 32.64 117.293 31.232ZM140.438 23.504C140.15 23.472 139.95 23.456 139.838 23.456C139.438 23.456 139.134 23.536 138.926 23.696C138.718 23.84 138.574 24.096 138.493 24.464H140.438V28.904H138.446V38H133.118V28.904H131.678V24.464H133.118C133.15 22.704 133.702 21.344 134.774 20.384C135.862 19.408 137.382 18.92 139.334 18.92C139.558 18.92 139.926 18.936 140.438 18.968V23.504ZM157.16 24.464L148.496 44.48H142.664L146.072 37.328L140.432 24.464H146.36L148.904 31.328L151.28 24.464H157.16Z" fill="white"/>
            </svg>
            <div id="question">
              <h4>Challenge 1</h4>
              <p id="question1Artist">${question.question1}</p>
            </div>
            <div id="selectAnwswer1">
              <button id="option1">A</button>
              <button id="option2">B</button>
              <button id="option3">C</button>
            </div>
            <p>Select the correct answer.This question has a percentage of 15%.</p>
          </div>
      `;
      timeout = setTimeout(() => {
        if (!hasAnswered) {
          hasAnswered = true;
          navigateToTelefono("/timeUp", { correct: false });
        }
      }, 6000);

      async function handleAnswer(selectedOption) {
        if (hasAnswered) return;
        clearTimeout(timeout); 
          
        try {
          const body = {
            answer: selectedOption.trim(),
            artist: artistName,
          };
      
          await makeRequest2("/select-answer-question1", "POST", body);
        } catch (err) {
          console.error("Error enviando al servidor:", err);
        }
      }

      socket.on("notify-answer", (data) => {
        if (hasAnswered) return; 
        hasAnswered = true;
        clearTimeout(timeout);
      
        const isCorrect = data.correct;
      
        navigateToTelefono(
          isCorrect ? "/screenLevelQuestion1T" : "/screenWasWrongT",
          { correct: isCorrect }
        );
      });

      document.getElementById("option1").addEventListener("click", () => handleAnswer(question.option1));
      document.getElementById("option2").addEventListener("click", () => handleAnswer(question.option2));
      document.getElementById("option3").addEventListener("click", () => handleAnswer(question.option3));
         
      
    } catch (error) {
      console.error("Error en getQuestion:", error);
      app.innerHTML = "<p>Ocurrió un error al cargar la pregunta.</p>";
    }
  }
  

  
  getQuestion();
}